#:import math math

<GameDisplay>:
    color_bg: 0.5,0.5,0.5
    canvas:
        Color:
            rgb: self.color_bg
        Rectangle:
            pos: self.pos
            size: self.size


<Triangles>:
    canvas.before:
        PushMatrix

    canvas:
        Color:
            rgb: self.color_bg

        Rotate:
            angle: self.angle + 90
            axis: 0, 0, 1
            origin: self.pos

        Rectangle:
            source: 'img/triangles.png'
            size: self.scale * 20, self.scale * 15
            pos: self.pos[0] - self.scale * 10, self.pos[1]


        Color:
            rgb: self.color_hl
        Rotate:
            angle: 180
            axis: 0, 0, 1
            origin: self.pos

        Rectangle:
            source: 'img/triangles.png'
            size: self.scale * 20, self.scale * 15
            pos: self.pos[0] - self.scale * 10, self.pos[1]

    canvas.after:
        PopMatrix


<Tail>:
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            axis: 0, 0, 1
            origin: self.pos

    canvas:
        Color:
            rgb: self.color_bg
        Rectangle:
            source: 'img/kite_tail.png'
            size: 12, 20
            pos: self.pos[0] - 6, self.pos[1] - 10

    canvas.after:
        PopMatrix


<Trace>:
    canvas:
        Color:
            rgb: self.color_bg
        Line:
            width: 1.01
            points: self.points



<Planet>:
    radius: 2
    img_bg: 'img/planets/mountain1_bg.png'
    img_hl: 'img/planets/mountain1_hl.png'

    color_bg: 0.5,0.5,0.5
    color_hl: 0.5,0.5,0.5

    canvas:
        # BG
        Color:
            rgb: self.color_bg
        Rectangle:
            source: self.img_bg
            size: self.radius*2, self.radius*2
            pos: self.pos[0] - self.radius, self.pos[1] - self.radius

        # Highlights
        Color:
            rgb: self.color_hl
        Rectangle:
            source: self.img_hl
            size: self.radius*2, self.radius*2
            pos: self.pos[0] - self.radius, self.pos[1] - self.radius


<Canon>:
    color_bg: 0.5,0.5,0.5

    canvas.before:
        PushMatrix
        Rotate:
            angle: -self.angle
            axis: 0, 0, 1
            origin: self.pos

    canvas:
        Color:
            rgb: self.color_bg
        Rectangle:
            source: 'img/icons/kite.png'
            size: 40,45
            pos: self.pos[0] - 20, self.pos[1]-10

    canvas.after:
        PopMatrix


<Kite>:
    color_bg: 0.1,0.1,0.1
    color_hl: 0.1,0.1,0.1
    velocity: 3,10

    canvas.before:
        PushMatrix
        Rotate:
            angle: (270 + math.degrees(math.atan2(float(self.velocity[1]),self.velocity[0])))%360
            axis: 0, 0, 1
            origin: self.pos

    canvas:
        Color:
            rgb: self.color_rocket
        Rectangle:
            source: 'img/kite2_rocket.png'
            size: 48,54
            pos: self.pos[0] - 24, self.pos[1] - 38

        Color:
            rgb: self.color_bg
        Rectangle:
            source: 'img/kite2_bg.png'
            size: 48,54
            pos: self.pos[0] - 24, self.pos[1] - 38

        Color:
            rgb: self.color_hl
        Rectangle:
            source: 'img/kite2_hl.png'
            size: 48,54
            pos: self.pos[0] - 24, self.pos[1] - 38

    canvas.after:
        PopMatrix


<Checkpoint>:
    points: 100,100,200,200
    color_bg: 0.5,0.5,0.5
    color_hl: 0.5,0.5,0.5
    active: True

    canvas:
        Color:
            rgb: self.color_hl if self.active else self.color_bg
        Line:
            points: self.points
            width: 2


<FlatButton>:
    color_bg: 0.5,0.5,0.5
    color_hl: 0.9,0.9,0.9
    btn_img: ''
    down: False

    canvas.before:
        Color:
            rgb: self.color_hl if self.down else self.color_bg
        Rectangle:
            size: self.size
            pos: self.pos

    canvas.after:
        Color:
            rgb: self.color_bg if self.down else self.color_hl

        # !! Image has to be the same aspect ratio as btn in game...
        Rectangle:
            source: self.btn_img
            size: self.size[0] * 0.8, self.size[1] * 0.8
            pos: self.pos[0] + self.size[0]*0.1, self.pos[1] + self.size[1]*0.1


<Icon>:
    color_bg: 0.5,0.5,0.5
    img: ''

    canvas:
        Color:
            rgb: self.color_bg

        Rectangle:
            source: self.img
            size: self.size
            pos: self.pos